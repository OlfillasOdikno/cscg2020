
# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
import OpenSSL.crypto as crypto
from factordb.factordb import FactorDB

key = open("pubkey.pem","rb").read()
message = open("message.txt","rb").read()

key = crypto.load_publickey(crypto.FILETYPE_PEM, key)
numbers = key.to_cryptography_key().public_numbers()

N = numbers.n
E = numbers.e

C = int(message)
def fermat(n):
    a = isqrt(n)
    while True:
        b = a**_sage_const_2 -n
        if b > _sage_const_0  and b.is_square():
            p = int(str(a-isqrt(b)))
            return p,n/p
        a +=_sage_const_1 
    
factors = fermat(N)
P = factors[_sage_const_0 ]
Q = factors[_sage_const_1 ]
D = xgcd(E,(P - _sage_const_1 ) * (Q - _sage_const_1 ))[_sage_const_1 ]
M = pow(C,D,N)
print(hex(int(str(M))).replace("L","")[_sage_const_2 :].decode('hex'))

