
# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
import OpenSSL.crypto as crypto
from factordb.factordb import FactorDB

def read_key(f):
    return crypto.load_publickey(crypto.FILETYPE_PEM,open(f,"rb").read()).to_cryptography_key().public_numbers()

keyD = read_key("german_government.pem")
keyU =  read_key("us_government.pem")
keyR = read_key("russian_government.pem")

messages = [int(l.split(": ")[_sage_const_1 ]) for l in open("intercepted-messages.txt","rb").readlines()]

cD = messages[_sage_const_0 ]
cU = messages[_sage_const_1 ]
cR = messages[_sage_const_2 ]

assert(keyD.e==keyU.e==keyR.e==_sage_const_3 )

M = crt([cD,cU,cR],[keyD.n,keyU.n,keyR.n]).nth_root(_sage_const_3 )
print(hex(int(str(M))).replace("L","")[_sage_const_2 :].decode('hex'))

'''
P = factors[0]
Q = factors[1]
D = xgcd(E,(P - 1) * (Q - 1))[1]
M = pow(C,D,N)
print(hex(int(str(M))).replace("L","")[2:].decode('hex'))
'''

